/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef ENC_ARGS_H
#define ENC_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */ 

#include <openenclave/bits/result.h>

/* User types specified in edl */
typedef struct ocall_struct_stat64i32 {
    unsigned int _st_dev;
    unsigned short int _st_ino;
    unsigned short int _st_mode;
    short int _st_nlink;
    short int _st_uid;
    short int _st_gid;
    unsigned int _st_rdev;
    long int _st_size;
    uint64_t _st_atime;
    uint64_t _st_mtime;
    uint64_t _st_ctime;
} ocall_struct_stat64i32;

typedef struct GetUntrustedFileSize_Result {
    unsigned int status;
    int32_t fileSize;
} GetUntrustedFileSize_Result;

typedef struct GetUntrustedFileContent_Result {
    unsigned int status;
    char content[4096];
} GetUntrustedFileContent_Result;

typedef struct FindFirstUntrustedFile_Result {
    uint32_t status;
    char d_name[256];
    uintptr_t findNextHandle;
} FindFirstUntrustedFile_Result;

typedef struct ocall_struct_dirent {
    uint32_t status;
    char d_name[256];
} ocall_struct_dirent;


typedef struct _ecall_TaCreateMasterEncryptionKey_args_t {
	int _retval;
    oe_result_t _result;
 } ecall_TaCreateMasterEncryptionKey_args_t;

typedef struct _ecall_TaDestroyMasterEncryptionKey_args_t {
	int _retval;
    oe_result_t _result;
 } ecall_TaDestroyMasterEncryptionKey_args_t;

typedef struct _ecall_TaGetRandomBytes_args_t {
	int _retval;
	unsigned char* buffer;
	size_t buffer_size;
    oe_result_t _result;
 } ecall_TaGetRandomBytes_args_t;

typedef struct _ecall_TaEncryptData_args_t {
	int _retval;
	unsigned char* plaintext;
	size_t plaintext_len;
	unsigned char* aad;
	size_t aad_len;
	unsigned char* iv;
	size_t iv_len;
	unsigned char* output_buffer;
	size_t output_buffer_size;
    oe_result_t _result;
 } ecall_TaEncryptData_args_t;

typedef struct _ecall_TaDecryptData_args_t {
	int _retval;
	unsigned char* ciphertext_buffer;
	size_t ciphertext_buffer_size;
	unsigned char* aad;
	size_t aad_len;
	unsigned char* iv;
	size_t iv_len;
	unsigned char* output_buffer;
	size_t output_buffer_size;
    oe_result_t _result;
 } ecall_TaDecryptData_args_t;

typedef struct _ecall_TaSetSigningKey_args_t {
	int _retval;
	unsigned char* key;
	size_t key_len;
    oe_result_t _result;
 } ecall_TaSetSigningKey_args_t;

typedef struct _ecall_TaSignData_args_t {
	int _retval;
	unsigned char* data_to_be_signed;
	size_t data_to_be_signed_size;
	unsigned char* digest;
	size_t digest_size;
    oe_result_t _result;
 } ecall_TaSignData_args_t;

typedef struct _ecall_TaDeriveAndSignData_args_t {
	int _retval;
	unsigned char* identity;
	size_t identity_size;
	unsigned char* data_to_be_signed;
	size_t data_to_be_signed_size;
	unsigned char* digest;
	size_t digest_size;
    oe_result_t _result;
 } ecall_TaDeriveAndSignData_args_t;

typedef struct _ecall_InitializeStdio_args_t {
    oe_result_t _result;
 } ecall_InitializeStdio_args_t;

typedef struct _ocall_mkdir_args_t {
	int _retval;
	char* dirname;
	size_t dirname_len;
    oe_result_t _result;
 } ocall_mkdir_args_t;

typedef struct _ocall_GetUntrustedFileSize_args_t {
	GetUntrustedFileSize_Result _retval;
	char* filename;
	size_t filename_len;
    oe_result_t _result;
 } ocall_GetUntrustedFileSize_args_t;

typedef struct _ocall_GetUntrustedFileContent_args_t {
	GetUntrustedFileContent_Result _retval;
	char* location;
	size_t location_len;
	size_t len;
    oe_result_t _result;
 } ocall_GetUntrustedFileContent_args_t;

typedef struct _ocall_ExportFile_args_t {
	unsigned int _retval;
	char* filename;
	size_t filename_len;
	unsigned int appendToExistingFile;
	void* content;
	size_t len;
    oe_result_t _result;
 } ocall_ExportFile_args_t;

typedef struct _ocall_ExportPublicCertificate_args_t {
	oe_result_t _retval;
	char* location;
	size_t location_len;
	void* ptr;
	size_t len;
    oe_result_t _result;
 } ocall_ExportPublicCertificate_args_t;

typedef struct _ocall_stat64i32_args_t {
	int _retval;
	char* path;
	size_t path_len;
	struct ocall_struct_stat64i32* buf;
    oe_result_t _result;
 } ocall_stat64i32_args_t;

typedef struct _ocall_remove_args_t {
	int _retval;
	char* filename;
	size_t filename_len;
    oe_result_t _result;
 } ocall_remove_args_t;

typedef struct _ocall_opendir_args_t {
	FindFirstUntrustedFile_Result _retval;
	char* filePathWithWildcards;
	size_t filePathWithWildcards_len;
	uint32_t matchingFileNameSize;
    oe_result_t _result;
 } ocall_opendir_args_t;

typedef struct _ocall_readdir_args_t {
	ocall_struct_dirent _retval;
	uintptr_t findNextHandle;
	uint32_t matchingFileNameSize;
    oe_result_t _result;
 } ocall_readdir_args_t;

typedef struct _ocall_closedir_args_t {
	oe_result_t _retval;
	uintptr_t findNextHandle;
    oe_result_t _result;
 } ocall_closedir_args_t;

/* trusted function ids */
enum {
    fcn_id_ecall_TaCreateMasterEncryptionKey = 0,
    fcn_id_ecall_TaDestroyMasterEncryptionKey = 1,
    fcn_id_ecall_TaGetRandomBytes = 2,
    fcn_id_ecall_TaEncryptData = 3,
    fcn_id_ecall_TaDecryptData = 4,
    fcn_id_ecall_TaSetSigningKey = 5,
    fcn_id_ecall_TaSignData = 6,
    fcn_id_ecall_TaDeriveAndSignData = 7,
    fcn_id_ecall_InitializeStdio = 8,
    fcn_id_trusted_call_id_max = OE_ENUM_MAX
};


/* untrusted function ids */
enum {
    fcn_id_ocall_mkdir = 0,
    fcn_id_ocall_GetUntrustedFileSize = 1,
    fcn_id_ocall_GetUntrustedFileContent = 2,
    fcn_id_ocall_ExportFile = 3,
    fcn_id_ocall_ExportPublicCertificate = 4,
    fcn_id_ocall_stat64i32 = 5,
    fcn_id_ocall_remove = 6,
    fcn_id_ocall_opendir = 7,
    fcn_id_ocall_readdir = 8,
    fcn_id_ocall_closedir = 9,
    fcn_id_untrusted_call_max = OE_ENUM_MAX
};


#endif // ENC_ARGS_H
